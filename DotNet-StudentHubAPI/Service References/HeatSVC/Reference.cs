//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentHubAPI.HeatSVC {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Util.ResultObject", Namespace="http://schemas.datacontract.org/2004/07/BKIWCFService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[][]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    public partial class UtilResultObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable DtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnerExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ObjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable Dt {
            get {
                return this.DtField;
            }
            set {
                if ((object.ReferenceEquals(this.DtField, value) != true)) {
                    this.DtField = value;
                    this.RaisePropertyChanged("Dt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnerExceptionMessage {
            get {
                return this.InnerExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionMessageField, value) != true)) {
                    this.InnerExceptionMessageField = value;
                    this.RaisePropertyChanged("InnerExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Obj {
            get {
                return this.ObjField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjField, value) != true)) {
                    this.ObjField = value;
                    this.RaisePropertyChanged("Obj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HeatSVC.ICourseApplication")]
    public interface ICourseApplication {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseApplication/CreateHEATTicket", ReplyAction="http://tempuri.org/ICourseApplication/CreateHEATTicketResponse")]
        StudentHubAPI.HeatSVC.UtilResultObject CreateHEATTicket(string wsClientUsername, string wsClientPassword, string[][] OEArray);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseApplication/CreateHEATTicket", ReplyAction="http://tempuri.org/ICourseApplication/CreateHEATTicketResponse")]
        System.Threading.Tasks.Task<StudentHubAPI.HeatSVC.UtilResultObject> CreateHEATTicketAsync(string wsClientUsername, string wsClientPassword, string[][] OEArray);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseApplication/UpdateHEATTicketStatus", ReplyAction="http://tempuri.org/ICourseApplication/UpdateHEATTicketStatusResponse")]
        StudentHubAPI.HeatSVC.UtilResultObject UpdateHEATTicketStatus(string wsClientUsername, string wsClientPassword, string ServiceReqNumb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseApplication/UpdateHEATTicketStatus", ReplyAction="http://tempuri.org/ICourseApplication/UpdateHEATTicketStatusResponse")]
        System.Threading.Tasks.Task<StudentHubAPI.HeatSVC.UtilResultObject> UpdateHEATTicketStatusAsync(string wsClientUsername, string wsClientPassword, string ServiceReqNumb);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICourseApplicationChannel : StudentHubAPI.HeatSVC.ICourseApplication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CourseApplicationClient : System.ServiceModel.ClientBase<StudentHubAPI.HeatSVC.ICourseApplication>, StudentHubAPI.HeatSVC.ICourseApplication {
        
        public CourseApplicationClient() {
        }
        
        public CourseApplicationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CourseApplicationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseApplicationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseApplicationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public StudentHubAPI.HeatSVC.UtilResultObject CreateHEATTicket(string wsClientUsername, string wsClientPassword, string[][] OEArray) {
            return base.Channel.CreateHEATTicket(wsClientUsername, wsClientPassword, OEArray);
        }
        
        public System.Threading.Tasks.Task<StudentHubAPI.HeatSVC.UtilResultObject> CreateHEATTicketAsync(string wsClientUsername, string wsClientPassword, string[][] OEArray) {
            return base.Channel.CreateHEATTicketAsync(wsClientUsername, wsClientPassword, OEArray);
        }
        
        public StudentHubAPI.HeatSVC.UtilResultObject UpdateHEATTicketStatus(string wsClientUsername, string wsClientPassword, string ServiceReqNumb) {
            return base.Channel.UpdateHEATTicketStatus(wsClientUsername, wsClientPassword, ServiceReqNumb);
        }
        
        public System.Threading.Tasks.Task<StudentHubAPI.HeatSVC.UtilResultObject> UpdateHEATTicketStatusAsync(string wsClientUsername, string wsClientPassword, string ServiceReqNumb) {
            return base.Channel.UpdateHEATTicketStatusAsync(wsClientUsername, wsClientPassword, ServiceReqNumb);
        }
    }
}
